#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

struct node{
    node *left,*right;
    
};
node* create(){
    node* t=new node();
    t->left=NULL;
    t->right=NULL;
    return t;
}
void insert(node* root,int n){
    for(int i=20;i>=0;i--){
        if(n & 1<<i)
        {
            if(root->right==NULL)
                root->right=create();
            root=root->right;
        }
        else{
            if(root->left==NULL)
                root->left=create();
            root=root->left;
        }
        
    }
}
int maxxor(node* root,int n){
    int ans=0;
    for(int i=20;i>=0;i--){
        if(n & 1<<i){
            if(root->left==NULL && root->right==NULL){
                return ans;
            }
            else if(root->left==NULL){
                root=root->right;
              
                
            }
            else{
                root=root->left;
                  ans+=1<<i;
            }
        }
        else {
             if(root->left==NULL && root->right==NULL){
                return ans;
            }
            else if(root->right==NULL){
                   root=root->left;
               
                
            }
            else{
              root=root->right;
                ans+=1<<i;
            }
        }
    }
    
    return ans;
}
int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        int a[n+1];
        node *root = create(); 
        for(int i=0;i<n;i++)
            cin>>a[i],insert(root,a[i]);
        int ans = 0;
        for(int i=0;i<n;i++){
            ans=max(ans,maxxor(root,a[i]));
        }
        cout<<ans<<"\n";
        
    }
    return 0;
}
