#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;



int k;
struct node
{
    int data;
    node* left;
    node* right;
};
node* create(int data)
{
    node* newn=new node();
    newn->data=data;
    newn->left=NULL;
    newn->right=NULL;
    return newn;
}
node *insert(int a[],node* root,int i,int n)
{
    if(i<=n) 
    { 
        node* temp=create(a[i]); 
        root=temp; 
  
        root->left=insert(a,root->left,2*i,n); 
        root->right = insert(a,root->right,2*i+1,n); 
    } 
    return root;
}
void inorder(int b[],node* root)
{
    if(root==NULL)
        return;
    inorder(b,root->left);
    b[k++]=root->data;
    inorder(b,root->right);
}
int main() {

    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    
    int t;
    cin>>t;
    while(t--)
    {
        node *root=NULL;
        int n,a[10000],i,b[10000];
        cin>>n;
        for(i=1;i<=n;i++)
            cin>>a[i];
       root= insert(a,root,1,n);k=0;
        inorder(b,root);
        for(i=0;i<n-1;i++)
        {
            if(b[i]>b[i+1])
                break;
        }
        if(i==n-1)
            cout<<"True\n";
        else
            cout<<"False\n";
    }
    return 0;
}

