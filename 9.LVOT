//https://www.hackerrank.com/contests/smart-interviews/challenges/si-left-view-of-tree
#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include<queue>
using namespace std;



struct node
{
    int data;
    node* left;
    node* right;
};
node* creat(int data)
{
    node* t=new node();
    t->data=data;
    t->left=NULL;
    t->right=NULL;
    return t;
}
node* insert(node* root,int data)
{
    if(root==NULL)
        root=creat(data);
    else if(data<=root->data)
        root->left=insert(root->left,data);
    else
        root->right=insert(root->right,data);
    return root;
}
void leftview(node* root)
{
    queue<node*>q;
    q.push(root);
    int c=1,r=0,f=1;
    while(!q.empty())
    {
        node *t=q.front();
        q.pop();
        if(f==1){
               cout<<t->data<<" ";f=0;}
        c--;
        if(t->left!=NULL){
            q.push(t->left);r++;}
        if(t->right!=NULL){
            r++;
            q.push(t->right);
        }
        if(c==0)
        {
            c=r;
            r=0;f=1;
     
        }
    }
}
int main() {

    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
    int t;
    cin>>t;
    while(t--)
    {
        int n,a;
        node* root=NULL;
        cin>>n;
        while(n--)
        {
            cin>>a;
            root=insert(root,a);
        }
        leftview(root);
        cout<<"\n";
    }
    return 0;
}

